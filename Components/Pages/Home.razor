@page "/"

<PageTitle>DemoApp</PageTitle>


<FluentStack Style="padding-top:1em;padding-bottom:1em" Orientation="Orientation.Horizontal">
    <FluentIcon Title="Welcome" Value="@(new Icons.Regular.Size32.Flash())"></FluentIcon>
    <FluentLabel Typo="Typography.H2">Event Automation DemoApp</FluentLabel>
</FluentStack>
<p>Welcome to Event Automation DemoApp.</p>

<p>
    This DemoApp demonstrates the following use-cases:
</p>
<ol>
    <li>
        Integration Event Streams with IBM MQ
    </li>
    <li>
        Filter events based on particular properties
    </li>
    <li>
        Deduplicating repeated events
    </li>
    <li>
        Join related events within time windows
    </li>
</ol>

<FluentLabel Style="padding-top:1em" Typo="Typography.H4">
    Architecture diagram
</FluentLabel>

<img style="padding-top:1em; max-width:100%; max-height:100%" src="EventStreams.jpeg" />

<FluentLabel Style="padding-bottom:1em" Typo="Typography.H4">
    1. Integration Event Streams with IBM MQ
</FluentLabel>
<h5>
    Scenario:
</h5>
<p>
    Enable the core system to seamlessly integrate with surrounding systems in near real-time.
</p>
<p>
    This demo takes source message coming from IBM MQ, clone and forward it to Event Streams topic for further processing. The integration involves at least the following components:
</p>
<ol>
    <li>
        IBM MQ Queue as source of message
    </li>
    <li>
        Additional IBM MQ Queue to clone message
    </li>
    <li>
        Kafka connector to take message from queue and store it into kafka topic
    </li>
    <li>
        Kafka topic for storing message
    </li>
</ol>

<img style="padding-bottom:2em; max-width:100%; max-height:75%" src="Integration.jpeg" />


<FluentLabel Style="padding-top:1em;padding-bottom:1em" Typo="Typography.H4">
    2. Filter events based on particular properties
</FluentLabel>
<p>
    When processing events, we can use filter operations to select a subset that we want to use. Filtering works on individual events in the stream.
</p>
<h5>
    Scenario:
</h5>
<p>
    Identify transaction (transfer money) with specific amount
</p>
<img style="padding-bottom:2em; max-width:100%; max-height:100%" src="Filter.jpeg" />


<FluentLabel Style="padding-top:2em;padding-bottom:1em" Typo="Typography.H4">
    3. Deduplicating repeated events
</FluentLabel>
<p>
    Remove any duplicate event from a topic, for processing by systems that cannot behave idempotently.
</p>
<h5>
    Scenario:
</h5>
<p>
    Make sure that transaction (transfer money) request that might be received more than once for the same request - due to any reasons, is processed once by the systems that cannot behave idempotently.
</p>
<img style="padding-bottom:1em; max-width:100%; max-height:100%" src="Deduplication.jpeg" />



<FluentLabel Style="padding-top:2em;padding-bottom:1em" Typo="Typography.H4">
    4. Join related events within time windows
</FluentLabel>
<p>
    Sometimes we need to examine events from more than one topic. Many interesting situations need us to combine multiple streams of events that correlate events across these inputs to derive a new, interesting situation.
</p>
<h5>
    Scenario:
</h5>
<p>
    Trigger a real-time sales promotion (notification): If a newly onboarded customer completes a transaction exceeding a specified amount within a defined number of days, they become eligible for a 50% discount from collaborating merchants.
</p>
<img style="padding-bottom:3em; max-width:100%; max-height:100%" src="SalesPromotion.jpeg" />






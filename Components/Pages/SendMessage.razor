@page "/message"
@using IBM.WMQ

@rendermode InteractiveServer

<PageTitle>Send Message</PageTitle>

<h1>Send Message</h1>

<div role="status" style="padding-bottom: 1em;">
    <FluentTextArea Rows="5" Cols="50" Label="Message" @bind-Value="@Message">
    </FluentTextArea>
</div>

<FluentButton Disabled="@(Message.Length == 0)" Appearance="Appearance.Accent" @onclick="SendMessageToMQ">Send</FluentButton>

@code {
    [Inject]
    public ILogger<SendMessage> logger { get; set; } = default!;


    // private string TLS_PATTERN_NAME = ".TLS";
    // private string cipherSpec = "TLS_RSA_WITH_AES_128_CBC_SHA256";
    // private string cipherSuite = "SSL_RSA_WITH_AES_128_CBC_SHA256";

    private string hostname = "msgmq-ibm-mq";
    private string channel = "MQ.QS.SVRCONN";
    private string queueManager = "msgmq";
    private string queueName = "TRANSFER";
    private int port = 1414;

    private Hashtable connectionProperties = new Hashtable();

    protected override void OnInitialized()
    {
        connectionProperties.Add(MQC.TRANSPORT_PROPERTY, MQC.TRANSPORT_MQSERIES_MANAGED);
        connectionProperties.Add(MQC.HOST_NAME_PROPERTY, hostname);
        connectionProperties.Add(MQC.CHANNEL_PROPERTY, channel);
        connectionProperties.Add(MQC.PORT_PROPERTY, port);
    }

    private string Message { get; set; } = @"{""id"": ""TRF-0001"", ""source"": ""800345932"", 
""target"":""503200571"", ""bookedDate"": ""2024-10-23"", ""amount"": 1250000, ""type"": ""BI Fast""}";

    private void SendMessageToMQ()
    {
        try
        {
            MQQueueManager qManager = new MQQueueManager(queueManager, connectionProperties);
            int openOptions = MQC.MQOO_INPUT_AS_Q_DEF | MQC.MQOO_OUTPUT;
            MQQueue queue = qManager.AccessQueue(queueName, openOptions);
            MQMessage msg = new MQMessage();
            msg.CharacterSet = MQC.CODESET_UTF;
            msg.WriteString(Message);
            MQPutMessageOptions pmo = new MQPutMessageOptions();
            queue.Put(msg, pmo);

        }
        catch (Exception ex)
        {
            logger.LogError(ex, ex.Message);
            //System.IO.File.WriteAllText("C:/Intel/error.txt", ex.ToString());
        }

    }

    // MQRC_CONNECTION_BROKEN
}
